// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  telephoneNumber String
  photoUrl  String?
  currentPoints Int 
  
  userAccount UserAccount @relation(fields: [userAccountId], references: [id])
  userAccountId String

  

  @@map("users")
}

model UserLocation{
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  latitude Float
  longitude Float

  userAccount UserAccount @relation(fields: [userAccountId], references: [id])
  userAccountId String
}

model UserAccount{
  id       String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username String @unique
  password String

  User User[]
  Onboarding Onboarding[]
  paymentDetails PaymentDetails[]
  UserLocation UserLocation[]

  @@map("user_accounts")
}

model Onboarding{
  id       String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  residence String
  vancouverArea String
  nightlifeType String
  outingFreequency String
  favouriteInstrument String
  drinkOfChoice String
  groupOrAlone String
  arrivalTime String
  appealingPromotion String
  notificationPreference String
  nighlifeEnvironment String
  foodImportance String
  drinkPreference String
  reasonForNightlife String

  userAccount UserAccount @relation(fields: [userAccountId], references: [id])
  userAccountId String


  @@map("onboardings")
}

model PaymentDetails{
  id       String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  paymentMethod String
  cardNumber String
  expiryDate DateTime
  cardHolderName String
  cvc String

  userAccount UserAccount @relation(fields: [userAccountId], references: [id])
  userAccountId String

  @@map("payment_details")
}
